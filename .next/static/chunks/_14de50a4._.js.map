{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/user/login/login.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"container\": \"login-module__9SyY8q__container\",\n  \"divider\": \"login-module__9SyY8q__divider\",\n  \"error-message\": \"login-module__9SyY8q__error-message\",\n  \"forgot-password\": \"login-module__9SyY8q__forgot-password\",\n  \"form-box\": \"login-module__9SyY8q__form-box\",\n  \"google-btn\": \"login-module__9SyY8q__google-btn\",\n  \"submit-btn\": \"login-module__9SyY8q__submit-btn\",\n  \"switch-form\": \"login-module__9SyY8q__switch-form\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file://D%3A/DATN/Pure-Botanica/src/app/user/login/page.tsx"],"sourcesContent":["\"use client\";\r\nimport Link from \"next/link\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useAuth } from \"../context/AuthContext\"; // Import useAuth\r\nimport styles from './login.module.css'; // Import the module\r\n\r\n// Interface định nghĩa kiểu cho payload token\r\ninterface CustomJwtPayload {\r\n  id?: string;\r\n  email?: string;\r\n  role?: string;\r\n  iat?: number;\r\n  exp?: number;\r\n}\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const router = useRouter();\r\n  const { isLoggedIn } = useAuth(); // Sử dụng AuthContext\r\n\r\n  // Sử dụng useEffect để thực hiện chuyển hướng sau khi render\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      // Nếu đã đăng nhập, chuyển hướng đến trang chủ (hoặc trang khác tùy thuộc vào vai trò)\r\n      router.push(\"/user\");\r\n    }\r\n  }, [isLoggedIn, router]); // Thêm dependencies để theo dõi sự thay đổi của isLoggedIn và router\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(\"\"); // Reset error\r\n\r\n    try {\r\n      const res = await fetch(\"https://api-zeal.onrender.com/api/users/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (!res.ok) {\r\n        setError(data.message || \"Đăng nhập thất bại\");\r\n        return;\r\n      }\r\n\r\n      // Giải mã token\r\n      const decodedToken: CustomJwtPayload = jwtDecode(data.token);\r\n      const userRole = decodedToken.role;\r\n      const userEmail = decodedToken.email;\r\n\r\n      if (!userRole) {\r\n        setError(\"Không tìm thấy thông tin vai trò người dùng\");\r\n        return;\r\n      }\r\n\r\n      // Lưu thông tin vào localStorage\r\n      localStorage.setItem(\"token\", data.token);\r\n      localStorage.setItem(\"role\", userRole);\r\n      localStorage.setItem(\"email\", userEmail || \"\");\r\n\r\n      // Force refresh để context được cập nhật và chuyển hướng\r\n      window.location.href = userRole === \"admin\" ? \"/admin\" : \"/user\";\r\n    } catch (err: any) {\r\n      console.error(\"Lỗi đăng nhập:\", err);\r\n      setError(err.message || \"Có lỗi xảy ra, vui lòng thử lại!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles[\"form-box\"]}>\r\n        <h2 className={styles[\"form-title\"]}>\r\n          <strong>ĐĂNG NHẬP</strong>\r\n        </h2>\r\n\r\n        <button className={styles[\"google-btn\"]}>\r\n          <img src=\"/images/icons8-google-48.png\" alt=\"Google Logo\" /> Đăng nhập với Google\r\n        </button>\r\n\r\n        <div className={styles.divider}>\r\n          <hr />\r\n          <span>Đăng nhập bằng tài khoản</span>\r\n          <hr />\r\n        </div>\r\n\r\n        <form action=\"#\" method=\"post\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Myname@gmail.com\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className={styles[\"input-field\"]}\r\n            required\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Mật khẩu\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className={styles[\"input-field\"]}\r\n            required\r\n          />\r\n\r\n          <div className={styles[\"forgot-password\"]}>\r\n            <a href=\"#\">Quên mật khẩu?</a>\r\n          </div>\r\n\r\n          <button type=\"submit\" className={styles[\"submit-btn\"]}>ĐĂNG NHẬP</button>\r\n          {error && <p className={styles[\"error-message\"]}>{error}</p>}\r\n\r\n          <p className={styles[\"switch-form\"]}>\r\n            Chưa có tài khoản? <Link href=\"/user/register\">Đăng ký</Link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA,4PAAkD,iBAAiB;AACnE,8PAAyC,oBAAoB;;;AAN7D;;;;;;;AAiBe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,KAAK,sBAAsB;IAExD,6DAA6D;IAC7D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,IAAI,YAAY;gBACd,uFAAuF;gBACvF,OAAO,IAAI,CAAC;YACd;QACF;8BAAG;QAAC;QAAY;KAAO,GAAG,qEAAqE;IAE/F,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS,KAAK,cAAc;QAE5B,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,iDAAiD;gBACvE,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YACzC;YAEA,MAAM,OAAO,MAAM,IAAI,IAAI;YAE3B,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,SAAS,KAAK,OAAO,IAAI;gBACzB;YACF;YAEA,gBAAgB;YAChB,MAAM,eAAiC,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAD,EAAE,KAAK,KAAK;YAC3D,MAAM,WAAW,aAAa,IAAI;YAClC,MAAM,YAAY,aAAa,KAAK;YAEpC,IAAI,CAAC,UAAU;gBACb,SAAS;gBACT;YACF;YAEA,iCAAiC;YACjC,aAAa,OAAO,CAAC,SAAS,KAAK,KAAK;YACxC,aAAa,OAAO,CAAC,QAAQ;YAC7B,aAAa,OAAO,CAAC,SAAS,aAAa;YAE3C,yDAAyD;YACzD,OAAO,QAAQ,CAAC,IAAI,GAAG,aAAa,UAAU,WAAW;QAC3D,EAAE,OAAO,KAAU;YACjB,QAAQ,KAAK,CAAC,kBAAkB;YAChC,SAAS,IAAI,OAAO,IAAI;QAC1B;IACF;IAEA,qBACE,6LAAC;QAAI,WAAW,mJAAA,CAAA,UAAM,CAAC,SAAS;kBAC9B,cAAA,6LAAC;YAAI,WAAW,mJAAA,CAAA,UAAM,CAAC,WAAW;;8BAChC,6LAAC;oBAAG,WAAW,mJAAA,CAAA,UAAM,CAAC,aAAa;8BACjC,cAAA,6LAAC;kCAAO;;;;;;;;;;;8BAGV,6LAAC;oBAAO,WAAW,mJAAA,CAAA,UAAM,CAAC,aAAa;;sCACrC,6LAAC;4BAAI,KAAI;4BAA+B,KAAI;;;;;;wBAAgB;;;;;;;8BAG9D,6LAAC;oBAAI,WAAW,mJAAA,CAAA,UAAM,CAAC,OAAO;;sCAC5B,6LAAC;;;;;sCACD,6LAAC;sCAAK;;;;;;sCACN,6LAAC;;;;;;;;;;;8BAGH,6LAAC;oBAAK,QAAO;oBAAI,QAAO;oBAAO,UAAU;;sCACvC,6LAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAW,mJAAA,CAAA,UAAM,CAAC,cAAc;4BAChC,QAAQ;;;;;;sCAEV,6LAAC;;;;;sCACD,6LAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAW,mJAAA,CAAA,UAAM,CAAC,cAAc;4BAChC,QAAQ;;;;;;sCAGV,6LAAC;4BAAI,WAAW,mJAAA,CAAA,UAAM,CAAC,kBAAkB;sCACvC,cAAA,6LAAC;gCAAE,MAAK;0CAAI;;;;;;;;;;;sCAGd,6LAAC;4BAAO,MAAK;4BAAS,WAAW,mJAAA,CAAA,UAAM,CAAC,aAAa;sCAAE;;;;;;wBACtD,uBAAS,6LAAC;4BAAE,WAAW,mJAAA,CAAA,UAAM,CAAC,gBAAgB;sCAAG;;;;;;sCAElD,6LAAC;4BAAE,WAAW,mJAAA,CAAA,UAAM,CAAC,cAAc;;gCAAE;8CAChB,6LAAC,+JAAA,CAAA,UAAI;oCAAC,MAAK;8CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM3D;GA1GwB;;QAIP,qIAAA,CAAA,YAAS;QACD,gJAAA,CAAA,UAAO;;;KALR","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file://D%3A/DATN/Pure-Botanica/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}