{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FPOLY/ky5/ASM_Next/Pure-Botanica/src/app/admin/oderdetail/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"next/navigation\"; // Sử dụng useParams để lấy ID từ URL\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function OrderDetailPage() {\r\n  const { id } = useParams(); // Lấy ID từ URL\r\n  const [order, setOrder] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchOrderDetail = async () => {\r\n      if (!id) {\r\n        setError(\"Không tìm thấy ID đơn hàng\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`https://api-zeal.onrender.com/api/orders/${id}`);\r\n        if (response.status !== 200) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        setOrder(response.data);\r\n      } catch (error: any) {\r\n        console.error(\"Lỗi khi tải chi tiết đơn hàng:\", error);\r\n        setError(error.response?.data?.message || \"Không thể tải chi tiết đơn hàng\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchOrderDetail();\r\n  }, [id]);\r\n\r\n  const formatDate = (dateString: string | number | Date) => {\r\n    const date = new Date(dateString);\r\n    return `${date.getDate().toString().padStart(2, \"0\")}-${(date.getMonth() + 1)\r\n      .toString()\r\n      .padStart(2, \"0\")}-${date.getFullYear()}`;\r\n  };\r\n\r\n  const calculateProductTotal = (product: any, quantity: number) => {\r\n    const price = product.discountPrice || product.price;\r\n    return price * quantity;\r\n  };\r\n\r\n  const calculateOrderTotal = (items: any[]) => {\r\n    return items.reduce((total, item) => total + calculateProductTotal(item.product, item.quantity), 0);\r\n  };\r\n\r\n  if (error) return <div className=\"error-message\">{error}</div>;\r\n  if (loading) return <div className=\"loading-message\">Đang tải...</div>;\r\n  if (!order) return <div className=\"error-message\">Không tìm thấy chi tiết đơn hàng</div>;\r\n\r\n  return (\r\n    <div className=\"order-container\">\r\n      <div className=\"title\">\r\n        <h1>Chi Tiết Đơn Hàng</h1>\r\n      </div>\r\n      <div className=\"order-detail\">\r\n        <p>\r\n          <strong>Khách hàng:</strong> {order.user.username}\r\n        </p>\r\n        <p>\r\n          <strong>Địa chỉ:</strong> {order.address}\r\n        </p>\r\n        <p>\r\n          <strong>Ngày:</strong> {formatDate(order.createdAt)}\r\n        </p>\r\n        <p>\r\n          <strong>Trạng thái:</strong> {order.status}\r\n        </p>\r\n        <h3>Sản phẩm trong đơn hàng:</h3>\r\n        <ul>\r\n          {order.items.map((item: any, idx: number) => (\r\n            <li key={idx}>\r\n              {item.product.name} x {item.quantity} -{\" \"}\r\n              {calculateProductTotal(item.product, item.quantity)} VND\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <h3>\r\n          Tổng tiền đơn hàng: {calculateOrderTotal(order.items)} VND\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA,4OAA6C,qCAAqC;AAClF;;;AAJA;;;;AAOe,SAAS;;IACtB,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD,KAAK,gBAAgB;IAC5C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IACxC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM;8DAAmB;oBACvB,IAAI,CAAC,IAAI;wBACP,SAAS;wBACT,WAAW;wBACX;oBACF;oBAEA,IAAI;wBACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,CAAC,yCAAyC,EAAE,IAAI;wBACjF,IAAI,SAAS,MAAM,KAAK,KAAK;4BAC3B,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;wBAC1D;wBACA,SAAS,SAAS,IAAI;oBACxB,EAAE,OAAO,OAAY;wBACnB,QAAQ,KAAK,CAAC,kCAAkC;wBAChD,SAAS,MAAM,QAAQ,EAAE,MAAM,WAAW;oBAC5C,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;oCAAG;QAAC;KAAG;IAEP,MAAM,aAAa,CAAC;QAClB,MAAM,OAAO,IAAI,KAAK;QACtB,OAAO,GAAG,KAAK,OAAO,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,KAAK,QAAQ,KAAK,CAAC,EACzE,QAAQ,GACR,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,KAAK,WAAW,IAAI;IAC7C;IAEA,MAAM,wBAAwB,CAAC,SAAc;QAC3C,MAAM,QAAQ,QAAQ,aAAa,IAAI,QAAQ,KAAK;QACpD,OAAO,QAAQ;IACjB;IAEA,MAAM,sBAAsB,CAAC;QAC3B,OAAO,MAAM,MAAM,CAAC,CAAC,OAAO,OAAS,QAAQ,sBAAsB,KAAK,OAAO,EAAE,KAAK,QAAQ,GAAG;IACnG;IAEA,IAAI,OAAO,qBAAO,6LAAC;QAAI,WAAU;kBAAiB;;;;;;IAClD,IAAI,SAAS,qBAAO,6LAAC;QAAI,WAAU;kBAAkB;;;;;;IACrD,IAAI,CAAC,OAAO,qBAAO,6LAAC;QAAI,WAAU;kBAAgB;;;;;;IAElD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;8BAAG;;;;;;;;;;;0BAEN,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;0CAAO;;;;;;4BAAoB;4BAAE,MAAM,IAAI,CAAC,QAAQ;;;;;;;kCAEnD,6LAAC;;0CACC,6LAAC;0CAAO;;;;;;4BAAiB;4BAAE,MAAM,OAAO;;;;;;;kCAE1C,6LAAC;;0CACC,6LAAC;0CAAO;;;;;;4BAAc;4BAAE,WAAW,MAAM,SAAS;;;;;;;kCAEpD,6LAAC;;0CACC,6LAAC;0CAAO;;;;;;4BAAoB;4BAAE,MAAM,MAAM;;;;;;;kCAE5C,6LAAC;kCAAG;;;;;;kCACJ,6LAAC;kCACE,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,MAAW,oBAC3B,6LAAC;;oCACE,KAAK,OAAO,CAAC,IAAI;oCAAC;oCAAI,KAAK,QAAQ;oCAAC;oCAAG;oCACvC,sBAAsB,KAAK,OAAO,EAAE,KAAK,QAAQ;oCAAE;;+BAF7C;;;;;;;;;;kCAMb,6LAAC;;4BAAG;4BACmB,oBAAoB,MAAM,KAAK;4BAAE;;;;;;;;;;;;;;;;;;;AAKhE;GApFwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}}]
}