{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FPOLY/ky5/ASM_Next/Pure-Botanica/src/app/user/login/page.tsx"],"sourcesContent":["\"use client\";\r\nimport Link from \"next/link\";\r\nimport { jwtDecode } from \"jwt-decode\"; // Named import\r\nimport \"./login.css\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\n// Khai báo kiểu tùy chỉnh cho payload của token\r\ninterface CustomJwtPayload {\r\n    id?: string;\r\n    email?: string;\r\n    role?: string;\r\n    iat?: number;\r\n    exp?: number;\r\n}\r\n\r\nexport default function LoginPage() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const router = useRouter();\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setError(\"\");  // Reset lỗi trước khi gửi yêu cầu\r\n\r\n        try {\r\n            const res = await fetch(\"https://api-zeal.onrender.com/api/users/login\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(\"API Response:\", data);\r\n\r\n            if (!res.ok) {\r\n                setError(data.message || \"Đăng nhập thất bại\");\r\n                return;\r\n            }\r\n\r\n            // Giải mã token với kiểu tùy chỉnh\r\n            const decodedToken: CustomJwtPayload = jwtDecode(data.token);\r\n            const userRole = decodedToken.role;\r\n            const userEmail = decodedToken.email;\r\n\r\n            if (!userRole) {\r\n                setError(\"Không tìm thấy thông tin vai trò người dùng\");\r\n                return;\r\n            }\r\n\r\n            // Lưu thông tin vào localStorage\r\n            localStorage.setItem(\"token\", data.token);  // Lưu token vào localStorage\r\n            localStorage.setItem(\"role\", userRole);    // Lưu role của user\r\n            localStorage.setItem(\"email\", userEmail || \"\");  // Lưu email người dùng\r\n\r\n            // Chuyển hướng theo quyền\r\n            if (userRole === \"admin\") {\r\n                router.push(\"/admin\");\r\n            } else {\r\n                router.push(\"/user\");\r\n            }\r\n        } catch (err: any) {\r\n            console.error(\"Lỗi đăng nhập:\", err);\r\n            setError(err.message || \"Có lỗi xảy ra, vui lòng thử lại!\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"containerrr\">\r\n            <div className=\"form-box\">\r\n                <h2>\r\n                    <strong>ĐĂNG NHẬP</strong>\r\n                </h2>\r\n\r\n                <button className=\"google-btn\">\r\n                    <img src=\"/images/icons8-google-48.png\" alt=\"Google Logo\" /> Đăng nhập với Google\r\n                </button>\r\n\r\n                <div className=\"divider\">\r\n                    <hr />\r\n                    <span>Đăng nhập bằng tài khoản</span>\r\n                    <hr />\r\n                </div>\r\n\r\n                <form action=\"#\" method=\"post\" onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Myname@gmail.com\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Mật khẩu\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n\r\n                    <div className=\"forgot-password\">\r\n                        <a href=\"#\">Quên mật khẩu?</a>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"submit-btn\">ĐĂNG NHẬP</button>\r\n                    {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                    <p className=\"switch-form\">\r\n                        Chưa có tài khoản? <Link href=\"/register\">Đăng ký</Link>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA,qQAAwC,eAAe;AAEvD;AACA;AALA;;;;;;;AAgBe,SAAS;IACpB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,SAAS,KAAM,kCAAkC;QAEjD,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,iDAAiD;gBACrE,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YAC3C;YAEA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,QAAQ,GAAG,CAAC,iBAAiB;YAE7B,IAAI,CAAC,IAAI,EAAE,EAAE;gBACT,SAAS,KAAK,OAAO,IAAI;gBACzB;YACJ;YAEA,mCAAmC;YACnC,MAAM,eAAiC,CAAA,GAAA,sJAAA,CAAA,YAAS,AAAD,EAAE,KAAK,KAAK;YAC3D,MAAM,WAAW,aAAa,IAAI;YAClC,MAAM,YAAY,aAAa,KAAK;YAEpC,IAAI,CAAC,UAAU;gBACX,SAAS;gBACT;YACJ;YAEA,iCAAiC;YACjC,aAAa,OAAO,CAAC,SAAS,KAAK,KAAK,GAAI,6BAA6B;YACzE,aAAa,OAAO,CAAC,QAAQ,WAAc,oBAAoB;YAC/D,aAAa,OAAO,CAAC,SAAS,aAAa,KAAM,uBAAuB;YAExE,0BAA0B;YAC1B,IAAI,aAAa,SAAS;gBACtB,OAAO,IAAI,CAAC;YAChB,OAAO;gBACH,OAAO,IAAI,CAAC;YAChB;QACJ,EAAE,OAAO,KAAU;YACf,QAAQ,KAAK,CAAC,kBAAkB;YAChC,SAAS,IAAI,OAAO,IAAI;QAC5B;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;;8BACX,8OAAC;8BACG,cAAA,8OAAC;kCAAO;;;;;;;;;;;8BAGZ,8OAAC;oBAAO,WAAU;;sCACd,8OAAC;4BAAI,KAAI;4BAA+B,KAAI;;;;;;wBAAgB;;;;;;;8BAGhE,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;;;;;sCACD,8OAAC;sCAAK;;;;;;sCACN,8OAAC;;;;;;;;;;;8BAGL,8OAAC;oBAAK,QAAO;oBAAI,QAAO;oBAAO,UAAU;;sCACrC,8OAAC;4BACG,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,QAAQ;;;;;;sCAEZ,8OAAC;;;;;sCACD,8OAAC;4BACG,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,QAAQ;;;;;;sCAGZ,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,MAAK;0CAAI;;;;;;;;;;;sCAGhB,8OAAC;4BAAO,MAAK;4BAAS,WAAU;sCAAa;;;;;;wBAC5C,uBAAS,8OAAC;4BAAE,WAAU;sCAAiB;;;;;;sCAExC,8OAAC;4BAAE,WAAU;;gCAAc;8CACJ,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;8CAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlE","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FPOLY/ky5/ASM_Next/Pure-Botanica/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FPOLY/ky5/ASM_Next/Pure-Botanica/node_modules/jwt-decode/build/esm/index.js"],"sourcesContent":["export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n"],"names":[],"mappings":";;;;AAAO,MAAM,0BAA0B;AACvC;AACA,kBAAkB,SAAS,CAAC,IAAI,GAAG;AACnC,SAAS,iBAAiB,GAAG;IACzB,OAAO,mBAAmB,KAAK,KAAK,OAAO,CAAC,QAAQ,CAAC,GAAG;QACpD,IAAI,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,IAAI,WAAW;QACnD,IAAI,KAAK,MAAM,GAAG,GAAG;YACjB,OAAO,MAAM;QACjB;QACA,OAAO,MAAM;IACjB;AACJ;AACA,SAAS,gBAAgB,GAAG;IACxB,IAAI,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM;IAClD,OAAQ,OAAO,MAAM,GAAG;QACpB,KAAK;YACD;QACJ,KAAK;YACD,UAAU;YACV;QACJ,KAAK;YACD,UAAU;YACV;QACJ;YACI,MAAM,IAAI,MAAM;IACxB;IACA,IAAI;QACA,OAAO,iBAAiB;IAC5B,EACA,OAAO,KAAK;QACR,OAAO,KAAK;IAChB;AACJ;AACO,SAAS,UAAU,KAAK,EAAE,OAAO;IACpC,IAAI,OAAO,UAAU,UAAU;QAC3B,MAAM,IAAI,kBAAkB;IAChC;IACA,WAAW,CAAC,UAAU,CAAC,CAAC;IACxB,MAAM,MAAM,QAAQ,MAAM,KAAK,OAAO,IAAI;IAC1C,MAAM,OAAO,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI;IAClC,IAAI,OAAO,SAAS,UAAU;QAC1B,MAAM,IAAI,kBAAkB,CAAC,uCAAuC,EAAE,MAAM,GAAG;IACnF;IACA,IAAI;IACJ,IAAI;QACA,UAAU,gBAAgB;IAC9B,EACA,OAAO,GAAG;QACN,MAAM,IAAI,kBAAkB,CAAC,kDAAkD,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAC7G;IACA,IAAI;QACA,OAAO,KAAK,KAAK,CAAC;IACtB,EACA,OAAO,GAAG;QACN,MAAM,IAAI,kBAAkB,CAAC,gDAAgD,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAC3G;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FPOLY/ky5/ASM_Next/Pure-Botanica/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}