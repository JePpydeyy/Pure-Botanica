{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FPOLY/ky5/ASM_Next/Pure-Botanica/src/app/admin/order/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"next/router\";\r\nimport toast from \"react-hot-toast\";\r\nimport './order.css'; // Đảm bảo có file CSS cho layout\r\n\r\nexport default function OrderPage() {\r\n  interface Order {\r\n    _id: string;\r\n    user: {\r\n      _id: string;\r\n      username: string;\r\n    };\r\n    createdAt: string;\r\n    status: string;\r\n    address: string;\r\n    items: { product: { name: string }; quantity: number }[]; // Các sản phẩm trong đơn hàng\r\n  }\r\n\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);\r\n\r\n  const router = useRouter();\r\n\r\n  // Lấy danh sách đơn hàng từ API\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const response = await fetch(\"https://api-zeal.onrender.com/api/orders/all\");\r\n        if (!response.ok) throw new Error(\"Không thể tải danh sách đơn hàng\");\r\n        const data = await response.json();\r\n        setOrders(data);\r\n      } catch (error) {\r\n        setError(\"Không thể tải danh sách đơn hàng\");\r\n      }\r\n    };\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  // Format ngày tháng\r\n  const formatDate = (dateString: string | number | Date) => {\r\n    const date = new Date(dateString);\r\n    return `${date.getDate().toString().padStart(2, \"0\")}-${(date.getMonth() + 1).toString().padStart(2, \"0\")}-${date.getFullYear()}`;\r\n  };\r\n\r\n  // Cập nhật trạng thái đơn hàng\r\n  const handleStatusChange = async (orderId: string, userId: string, newStatus: string) => {\r\n    try {\r\n      await axios.put(\r\n        `https://api-zeal.onrender.com/api/orders/status/${orderId}?userId=${userId}`,\r\n        { status: newStatus }\r\n      );\r\n      toast.success(\"Cập nhật trạng thái thành công\");\r\n      setOrders(orders.map(order => order._id === orderId ? { ...order, status: newStatus } : order)); // Cập nhật UI ngay lập tức\r\n    } catch (error) {\r\n      console.error(\"Lỗi cập nhật trạng thái:\", error);\r\n      toast.error(\"Không thể cập nhật trạng thái\");\r\n    }\r\n  };\r\n\r\n  // Xử lý khi click vào một đơn hàng để xem chi tiết\r\n  const handleOrderClick = (order: Order) => {\r\n    setSelectedOrder(order);\r\n  };\r\n\r\n  if (error) return <div>{error}</div>;\r\n  if (!orders.length) return <div>Đang tải...</div>;\r\n\r\n  return (\r\n    <div className=\"order-container\">\r\n      <div className=\"title\">\r\n        <h1>Danh Sách Đơn Hàng</h1>\r\n      </div>\r\n      <div className=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Tên</th>\r\n              <th>Địa Chỉ</th>\r\n              <th>Ngày</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order, index) => (\r\n              <tr key={order._id} onClick={() => handleOrderClick(order)}>\r\n                <td>{index + 1}</td>\r\n                <td>{order.user.username}</td>\r\n                <td>{order.address || \"Chưa có địa chỉ\"}</td>\r\n                <td>{formatDate(order.createdAt)}</td>\r\n                <td>\r\n                  <select\r\n                    value={order.status}\r\n                    onChange={(e) =>\r\n                      handleStatusChange(order._id, order.user._id, e.target.value)\r\n                    }\r\n                    className={`status-select ${order.status}`}\r\n                  >\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"shipped\">Shipped</option>\r\n                    <option value=\"delivered\">Delivered</option>\r\n                    <option value=\"cancelled\">Cancelled</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {selectedOrder && (\r\n        <div className=\"order-detail\">\r\n          <h2>Chi Tiết Đơn Hàng</h2>\r\n          <p><strong>Khách hàng:</strong> {selectedOrder.user.username}</p>\r\n          <p><strong>Địa chỉ:</strong> {selectedOrder.address}</p>\r\n          <p><strong>Ngày:</strong> {formatDate(selectedOrder.createdAt)}</p>\r\n          <p><strong>Trạng thái:</strong> {selectedOrder.status}</p>\r\n          <h3>Sản phẩm trong đơn hàng:</h3>\r\n          <ul>\r\n            {selectedOrder.items.map((item, idx) => (\r\n              <li key={idx}>\r\n                {item.product.name} x {item.quantity}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}