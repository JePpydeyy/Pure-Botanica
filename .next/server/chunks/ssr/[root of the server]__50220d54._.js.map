{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://D%3A/FPOLY/ky5/ASM_Next/Pure-Botanica/src/app/user/detail/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Image from \"next/image\";\r\nimport \"./detail.css\";\r\n\r\ninterface Product {\r\n  _id: string;\r\n  name: string;\r\n  price: number;\r\n  images: string[];\r\n  description: string;\r\n}\r\n\r\nexport default function DetailPage() {\r\n  const router = useRouter(); // Đặt useRouter bên trong thân component\r\n  const { id } = router.query; // Lấy id từ URL\r\n\r\n  const [product, setProduct] = useState<Product | null>(null);\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [mainImageSrc, setMainImageSrc] = useState<string | null>(null);\r\n  const [activeThumbnail, setActiveThumbnail] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (router.isReady && id) {\r\n      // Fetch dữ liệu sản phẩm từ API\r\n      const fetchProduct = async () => {\r\n        try {\r\n          const response = await fetch(`https://db-pure-bonanica.onrender.com/products/${id}`);\r\n          const data: Product = await response.json();\r\n          setProduct(data);\r\n          setMainImageSrc(data.images && data.images.length > 0 ? data.images[0] : \"/images/placeholder.png\");\r\n        } catch (error) {\r\n          console.error(\"Error fetching product:\", error);\r\n        }\r\n      };\r\n\r\n      fetchProduct();\r\n    }\r\n  }, [router.isReady, id]);\r\n\r\n  const handleThumbnailClick = (index: number) => {\r\n    if (product && product.images) {\r\n      setActiveThumbnail(index);\r\n      setMainImageSrc(product.images[index]);\r\n    }\r\n  };\r\n\r\n  if (!router.isReady || !product) {\r\n    return <p>Đang tải thông tin sản phẩm...</p>;\r\n  }\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <section className=\"product-section\">\r\n        <div className=\"product-thumbnails\">\r\n          {product.images.map((src, index) => (\r\n            <div\r\n              key={index}\r\n              className={`thumbnail ${activeThumbnail === index ? \"active\" : \"\"}`}\r\n              onClick={() => handleThumbnailClick(index)}\r\n            >\r\n              <img src={src} alt={`Thumbnail ${index + 1}`} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"detail-container\">\r\n          <div className=\"product-main\">\r\n            <Image\r\n              src={mainImageSrc || \"/images/placeholder.png\"}\r\n              alt={product.name}\r\n              width={500}\r\n              height={500}\r\n              className=\"product-image\"\r\n            />\r\n            <div className=\"product-info\">\r\n              <h1 className=\"product-title\">{product.name}</h1>\r\n              <p className=\"product-price\">{product.price.toLocaleString()}đ</p>\r\n              <p className=\"product-description\">{product.description}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"quantity-controls\">\r\n          <div className=\"quantity-wrapper\">\r\n            <button\r\n              className=\"quantity-btn decrease\"\r\n              onClick={() => setQuantity((prev) => Math.max(1, prev - 1))}\r\n            >\r\n              −\r\n            </button>\r\n            <input\r\n              type=\"text\"\r\n              className=\"quantity-input\"\r\n              value={quantity}\r\n              readOnly\r\n            />\r\n            <button\r\n              className=\"quantity-btn increase\"\r\n              onClick={() => setQuantity((prev) => prev + 1)}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n          <button className=\"add-to-cart\">Thêm vào giỏ hàng</button>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;;AAee,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD,KAAK,yCAAyC;IACrE,MAAM,EAAE,EAAE,EAAE,GAAG,OAAO,KAAK,EAAE,gBAAgB;IAE7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB;IACvD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,OAAO,OAAO,IAAI,IAAI;YACxB,gCAAgC;YAChC,MAAM,eAAe;gBACnB,IAAI;oBACF,MAAM,WAAW,MAAM,MAAM,CAAC,+CAA+C,EAAE,IAAI;oBACnF,MAAM,OAAgB,MAAM,SAAS,IAAI;oBACzC,WAAW;oBACX,gBAAgB,KAAK,MAAM,IAAI,KAAK,MAAM,CAAC,MAAM,GAAG,IAAI,KAAK,MAAM,CAAC,EAAE,GAAG;gBAC3E,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,2BAA2B;gBAC3C;YACF;YAEA;QACF;IACF,GAAG;QAAC,OAAO,OAAO;QAAE;KAAG;IAEvB,MAAM,uBAAuB,CAAC;QAC5B,IAAI,WAAW,QAAQ,MAAM,EAAE;YAC7B,mBAAmB;YACnB,gBAAgB,QAAQ,MAAM,CAAC,MAAM;QACvC;IACF;IAEA,IAAI,CAAC,OAAO,OAAO,IAAI,CAAC,SAAS;QAC/B,qBAAO,8OAAC;sBAAE;;;;;;IACZ;IAEA,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC;YAAQ,WAAU;;8BACjB,8OAAC;oBAAI,WAAU;8BACZ,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,sBACxB,8OAAC;4BAEC,WAAW,CAAC,UAAU,EAAE,oBAAoB,QAAQ,WAAW,IAAI;4BACnE,SAAS,IAAM,qBAAqB;sCAEpC,cAAA,8OAAC;gCAAI,KAAK;gCAAK,KAAK,CAAC,UAAU,EAAE,QAAQ,GAAG;;;;;;2BAJvC;;;;;;;;;;8BASX,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,6HAAA,CAAA,UAAK;gCACJ,KAAK,gBAAgB;gCACrB,KAAK,QAAQ,IAAI;gCACjB,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;0CAEZ,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDAAiB,QAAQ,IAAI;;;;;;kDAC3C,8OAAC;wCAAE,WAAU;;4CAAiB,QAAQ,KAAK,CAAC,cAAc;4CAAG;;;;;;;kDAC7D,8OAAC;wCAAE,WAAU;kDAAuB,QAAQ,WAAW;;;;;;;;;;;;;;;;;;;;;;;8BAK7D,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,WAAU;oCACV,SAAS,IAAM,YAAY,CAAC,OAAS,KAAK,GAAG,CAAC,GAAG,OAAO;8CACzD;;;;;;8CAGD,8OAAC;oCACC,MAAK;oCACL,WAAU;oCACV,OAAO;oCACP,QAAQ;;;;;;8CAEV,8OAAC;oCACC,WAAU;oCACV,SAAS,IAAM,YAAY,CAAC,OAAS,OAAO;8CAC7C;;;;;;;;;;;;sCAIH,8OAAC;4BAAO,WAAU;sCAAc;;;;;;;;;;;;;;;;;;;;;;;AAK1C","debugId":null}}]
}