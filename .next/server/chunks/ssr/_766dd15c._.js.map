{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/DATN/Pure-Botanica/src/app/user/edituser/%5Bid%5D/page.tsx"],"sourcesContent":["// src/app/user/edituser/[id]/page.tsx\r\n\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport { use } from \"react\"; // Import React.use để unwrap params\r\n\r\n// Định nghĩa interface cho User\r\ninterface User {\r\n  _id: string;\r\n  username: string;\r\n  email: string;\r\n  phone: string;\r\n  status: string;\r\n  listOrder: any[];\r\n  birthday: string | null;\r\n}\r\n\r\nexport default function EditUser({ params }: { params: Promise<{ id: string }> }) {\r\n  // Unwrap params để lấy id\r\n  const { id } = use(params);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [formData, setFormData] = useState<Partial<User>>({});\r\n  const router = useRouter();\r\n\r\n  // Lấy dữ liệu người dùng từ API dựa trên id\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      setError(\"Không có token. Vui lòng đăng nhập.\");\r\n      setLoading(false);\r\n      router.push(\"/login\"); // Chuyển hướng đến trang đăng nhập nếu không có token\r\n      return;\r\n    }\r\n\r\n    // Gọi API để lấy thông tin người dùng\r\n    fetch(`https://api-zeal.onrender.com/api/users/userinfo`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Lỗi khi tải thông tin người dùng.\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        if (data._id !== id) {\r\n          setError(\"Không tìm thấy người dùng với ID này.\");\r\n        } else {\r\n          setUser(data);\r\n          setFormData({\r\n            username: data.username,\r\n            email: data.email,\r\n            phone: data.phone,\r\n            birthday: data.birthday,\r\n          });\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message || \"Lỗi khi tải thông tin người dùng.\");\r\n        setLoading(false);\r\n      });\r\n  }, [id, router]);\r\n\r\n  // Xử lý thay đổi input trong form\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Xử lý gửi form để cập nhật thông tin người dùng\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      setError(\"Không có token. Vui lòng đăng nhập.\");\r\n      router.push(\"/login\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`https://api-zeal.onrender.com/api/users/update/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData), // Gửi dữ liệu form, không cần _id vì id đã trong URL\r\n      });\r\n\r\n      if (response.ok) {\r\n        router.push(\"/user/userinfo\"); // Chuyển hướng về trang profile sau khi cập nhật thành công\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData.message || \"Lỗi khi cập nhật thông tin.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Lỗi khi gửi yêu cầu cập nhật.\");\r\n    }\r\n  };\r\n\r\n  // Xử lý giao diện khi đang tải, lỗi hoặc không có dữ liệu\r\n  if (loading) return <p>Đang tải thông tin...</p>;\r\n  if (error) return <p>{error}</p>;\r\n  if (!user) return <p>Không tìm thấy thông tin người dùng.</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chỉnh sửa thông tin người dùng</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Tên:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={formData.username || \"\"}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email || \"\"}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>SĐT:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            value={formData.phone || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Ngày sinh:</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"birthday\"\r\n            value={formData.birthday ? formData.birthday.split(\"T\")[0] : \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Lưu thay đổi</button>\r\n        <Link href=\"/user/userinfo\">\r\n          <button type=\"button\">Hủy</button>\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file://D%3A/DATN/Pure-Botanica/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}